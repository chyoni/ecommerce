server:
  port: 0

spring:
  application:
    name: catalog-service
  datasource:
    url: jdbc:h2:tcp://localhost:9093/~/h2/db/ecommerce-catalog
    username: sa
    password:
    driver-class-name: org.h2.Driver
  jpa:
    hibernate:
      ddl-auto: none
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: ecommerce-catalog-service
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer # key 를 kafka 에 전달할 때, 직렬화할 수 있어야 하므로
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer # value 를 kafka 에 전달할 때, 직렬화할 수 있어야 하므로
      enable-auto-commit: false

eureka:
  instance:
    instance-id: ${spring.cloud.client.hostname}:${spring.application.instance_id:${random.value}} # 동일한 애플리케이션이라도 여러개 띄웠을 때 고유 ID 값을 가져서 유레카에 잘 등록되도록
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka # 실행중인 Eureka Server (이 애플리케이션을 Eureka Server 에 등록해야 하므로)

